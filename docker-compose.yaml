version: '3.2'
name: dflow

services:

  postgres:
    image: postgres:13-alpine
    container_name: dflow-postgres
    volumes:
      - vol-postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-Dfl0w}
      # - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      # - POSTGRES_DB=${POSTGRES_DB:-postgres}
      # ports:
      # - 5432:5432
    networks:
      - dflow_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  dflow-api:
    image: dflow-api:0.1.0
    container_name: dflow-api
    expose:
      - 8000
    ports:
      - 8000:8000
    environment:
      - SECRET_KEY=${SECRET_KEY:-Dfl0w}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-Dfl0w}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-dflow-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    networks:
      - dflow_net
    restart: unless-stopped
    command: ["uvicorn", "app.api.server:app", "--workers", "8", "--host", "0.0.0.0", "--port", "8000"]

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: r4a1234
    networks:
      - dflow_net
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  dflow_net:
    driver: bridge

volumes:
  vol-postgres-data:
    name: postgres-data
  pgadmin-data:
